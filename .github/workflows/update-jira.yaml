name: Count JIRAs
on:
  workflow_dispatch:
    inputs:
      version:
        description: Next release version
        required: true
        default: "3.72.0"
        type: string
      gist_id:
        description: ID of the gist to be updated
        required: true
        type: string
        default: "7fda2135b348991d302f098abfbc5cf2"

env:
  jira_projects: ROX, RS, RTOOLS
  slack_channel: C03KSV3N6N8 #test-release-automation
  script_url: /repos/${{github.repository}}/contents/.github/workflows/scripts/common.sh?ref=${{github.event.repository.default_branch}}
  ACCEPT_RAW: "Accept: application/vnd.github.v3.raw"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check-jira:
    name: "Check Open Jira tickets with fixVersion ${{inputs.version}} and update the gist"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Query JIRA
        env:
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [ -n "$JIRA_TOKEN" ] || { echo "::error::JIRA_TOKEN unset"; exit 1; }
          [ -n "$GITHUB_TOKEN" ] || { echo "::error::GITHUB_TOKEN unset"; }

          JQL="project IN (ROX) \
              AND fixVersion IN (\"${{inputs.version}}\") \
              AND status != CLOSED \
              AND Component != Documentation \
              AND type != Epic \
              ORDER BY assignee"
          num_open="$(curl --fail -sSL --get --data-urlencode "jql=$JQL" \
                -H "Authorization: Bearer $JIRA_TOKEN" \
                -H "Accept: application/json" \
                "https://issues.redhat.com/rest/api/2/search" |\
                jq -r '.issues[] | .key' | sort | awk 'END{print NR}')"
          echo "Found $num_open unfinished Jiras for ${{inputs.version}}"
      - name: Fetch gist
        run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/gists/${{ inputs.gist_id }}" \
            -o gist.json
          cat gist.json
          cat gist.json | jq -r '.files."hackaton.json".content' > object.json
          pwd
          ls -la
          cat object.json
      - name: Deploy to Gist
        uses: exuanbo/actions-deploy-gist@v1.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          gist_id: ${{ inputs.gist_id }}
          file_path: object.json
          file_type: text
          gist_file_name: hackaton.json
