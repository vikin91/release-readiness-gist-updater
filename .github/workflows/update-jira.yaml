name: Count JIRAs

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      version:
        description: Next release version
        required: false
        default: "3.72.0"
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GIST_ID: "7fda2135b348991d302f098abfbc5cf2"
  DEFAULT_VERSION: "3.72.0"

jobs:
  check-jira:
    name: "Check Open Jira tickets with fixVersion and update the gist"
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Query JIRA
        env:
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
        run: |
          INPUT_VERSION="${{inputs.version}}"
          VERSION="${INPUT_VERSION:-$DEFAULT_VERSION}"
          [ -n "$JIRA_TOKEN" ] || { echo "::error::JIRA_TOKEN unset"; exit 1; }

          JQL="project IN (ROX) \
              AND fixVersion IN (\"${VERSION}\") \
              AND status != CLOSED \
              AND Component != Documentation \
              AND type != Epic \
              ORDER BY assignee"
          num_open="$(curl --fail -sSL --get --data-urlencode "jql=$JQL" \
                -H "Authorization: Bearer $JIRA_TOKEN" \
                -H "Accept: application/json" \
                "https://issues.redhat.com/rest/api/2/search" |\
                jq -r '.issues[] | .key' | sort | awk 'END{print NR}')"
          echo "Found $num_open unfinished Jiras for ${VERSION}"
          echo "$num_open" > num_open
      - name: Check image scan vulnerabilities (MOCK)
        run: |
          echo "$((1 + $RANDOM % 3))" > vuln_crit
          echo "$((1 + $RANDOM % 5))" > vuln_high
          echo "$((1 + $RANDOM % 7))" > vuln_important
      - name: Fetch gist
        run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
            "https://api.github.com/gists/${GIST_ID}" \
            -o gist.json
          cat gist.json | jq -r '.files."hackaton.json".content' > object.json
      - name: Modify gist
        run: |
          echo "$(jq \
            --argjson no "$(cat num_open)" \
            --arg up "$(date -u)" \
            --argjson vuln_crit "$(cat vuln_crit)" \
            --argjson vuln_high "$(cat vuln_high)" \
            --argjson vuln_important "$(cat vuln_important)" \
            '
                .tickets_open = $no
              | .last_update = $up
              | .vulnerabilities.critical = $vuln_crit
              | .vulnerabilities.high = $vuln_high
              | .vulnerabilities.important = $vuln_important
            ' object.json)" > object.json
          cat object.json
      - name: Upload gist
        run: |
          curl -sSL \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
            "https://api.github.com/gists/${GIST_ID}" \
            --data @object.json


# hackaton.json
# {
#   "tickets_open":7,
#   "vulnerabilities": {
#     "low":19,
#     "medium":8,
#     "important":0,
#     "high":0,
#     "critical":0
#   },
#   "osci_branch":false
# }
